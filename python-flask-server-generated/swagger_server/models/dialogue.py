# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Dialogue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, dialogue_id: int=None, scene_id: int=None, character_id: int=None, original_text: str=None, modernized_text: str=None):  # noqa: E501
        """Dialogue - a model defined in Swagger

        :param dialogue_id: The dialogue_id of this Dialogue.  # noqa: E501
        :type dialogue_id: int
        :param scene_id: The scene_id of this Dialogue.  # noqa: E501
        :type scene_id: int
        :param character_id: The character_id of this Dialogue.  # noqa: E501
        :type character_id: int
        :param original_text: The original_text of this Dialogue.  # noqa: E501
        :type original_text: str
        :param modernized_text: The modernized_text of this Dialogue.  # noqa: E501
        :type modernized_text: str
        """
        self.swagger_types = {
            'dialogue_id': int,
            'scene_id': int,
            'character_id': int,
            'original_text': str,
            'modernized_text': str
        }

        self.attribute_map = {
            'dialogue_id': 'dialogue_id',
            'scene_id': 'scene_id',
            'character_id': 'character_id',
            'original_text': 'original_text',
            'modernized_text': 'modernized_text'
        }
        self._dialogue_id = dialogue_id
        self._scene_id = scene_id
        self._character_id = character_id
        self._original_text = original_text
        self._modernized_text = modernized_text

    @classmethod
    def from_dict(cls, dikt) -> 'Dialogue':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The dialogue of this Dialogue.  # noqa: E501
        :rtype: Dialogue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dialogue_id(self) -> int:
        """Gets the dialogue_id of this Dialogue.

        Note: This is a Primary Key.<pk/>  # noqa: E501

        :return: The dialogue_id of this Dialogue.
        :rtype: int
        """
        return self._dialogue_id

    @dialogue_id.setter
    def dialogue_id(self, dialogue_id: int):
        """Sets the dialogue_id of this Dialogue.

        Note: This is a Primary Key.<pk/>  # noqa: E501

        :param dialogue_id: The dialogue_id of this Dialogue.
        :type dialogue_id: int
        """
        if dialogue_id is None:
            raise ValueError("Invalid value for `dialogue_id`, must not be `None`")  # noqa: E501

        self._dialogue_id = dialogue_id

    @property
    def scene_id(self) -> int:
        """Gets the scene_id of this Dialogue.

        Note: This is a Foreign Key to `scene.scene_id`.<fk table='scene' column='scene_id'/>  # noqa: E501

        :return: The scene_id of this Dialogue.
        :rtype: int
        """
        return self._scene_id

    @scene_id.setter
    def scene_id(self, scene_id: int):
        """Sets the scene_id of this Dialogue.

        Note: This is a Foreign Key to `scene.scene_id`.<fk table='scene' column='scene_id'/>  # noqa: E501

        :param scene_id: The scene_id of this Dialogue.
        :type scene_id: int
        """

        self._scene_id = scene_id

    @property
    def character_id(self) -> int:
        """Gets the character_id of this Dialogue.

        Note: This is a Foreign Key to `character.character_id`.<fk table='character' column='character_id'/>  # noqa: E501

        :return: The character_id of this Dialogue.
        :rtype: int
        """
        return self._character_id

    @character_id.setter
    def character_id(self, character_id: int):
        """Sets the character_id of this Dialogue.

        Note: This is a Foreign Key to `character.character_id`.<fk table='character' column='character_id'/>  # noqa: E501

        :param character_id: The character_id of this Dialogue.
        :type character_id: int
        """

        self._character_id = character_id

    @property
    def original_text(self) -> str:
        """Gets the original_text of this Dialogue.


        :return: The original_text of this Dialogue.
        :rtype: str
        """
        return self._original_text

    @original_text.setter
    def original_text(self, original_text: str):
        """Sets the original_text of this Dialogue.


        :param original_text: The original_text of this Dialogue.
        :type original_text: str
        """

        self._original_text = original_text

    @property
    def modernized_text(self) -> str:
        """Gets the modernized_text of this Dialogue.


        :return: The modernized_text of this Dialogue.
        :rtype: str
        """
        return self._modernized_text

    @modernized_text.setter
    def modernized_text(self, modernized_text: str):
        """Sets the modernized_text of this Dialogue.


        :param modernized_text: The modernized_text of this Dialogue.
        :type modernized_text: str
        """

        self._modernized_text = modernized_text
