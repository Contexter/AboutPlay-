# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Parenthetical(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, parenthetical_id: int=None, dialogue_id: int=None, original_text: str=None, modernized_text: str=None):  # noqa: E501
        """Parenthetical - a model defined in Swagger

        :param parenthetical_id: The parenthetical_id of this Parenthetical.  # noqa: E501
        :type parenthetical_id: int
        :param dialogue_id: The dialogue_id of this Parenthetical.  # noqa: E501
        :type dialogue_id: int
        :param original_text: The original_text of this Parenthetical.  # noqa: E501
        :type original_text: str
        :param modernized_text: The modernized_text of this Parenthetical.  # noqa: E501
        :type modernized_text: str
        """
        self.swagger_types = {
            'parenthetical_id': int,
            'dialogue_id': int,
            'original_text': str,
            'modernized_text': str
        }

        self.attribute_map = {
            'parenthetical_id': 'parenthetical_id',
            'dialogue_id': 'dialogue_id',
            'original_text': 'original_text',
            'modernized_text': 'modernized_text'
        }
        self._parenthetical_id = parenthetical_id
        self._dialogue_id = dialogue_id
        self._original_text = original_text
        self._modernized_text = modernized_text

    @classmethod
    def from_dict(cls, dikt) -> 'Parenthetical':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The parenthetical of this Parenthetical.  # noqa: E501
        :rtype: Parenthetical
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parenthetical_id(self) -> int:
        """Gets the parenthetical_id of this Parenthetical.

        Note: This is a Primary Key.<pk/>  # noqa: E501

        :return: The parenthetical_id of this Parenthetical.
        :rtype: int
        """
        return self._parenthetical_id

    @parenthetical_id.setter
    def parenthetical_id(self, parenthetical_id: int):
        """Sets the parenthetical_id of this Parenthetical.

        Note: This is a Primary Key.<pk/>  # noqa: E501

        :param parenthetical_id: The parenthetical_id of this Parenthetical.
        :type parenthetical_id: int
        """
        if parenthetical_id is None:
            raise ValueError("Invalid value for `parenthetical_id`, must not be `None`")  # noqa: E501

        self._parenthetical_id = parenthetical_id

    @property
    def dialogue_id(self) -> int:
        """Gets the dialogue_id of this Parenthetical.

        Note: This is a Foreign Key to `dialogue.dialogue_id`.<fk table='dialogue' column='dialogue_id'/>  # noqa: E501

        :return: The dialogue_id of this Parenthetical.
        :rtype: int
        """
        return self._dialogue_id

    @dialogue_id.setter
    def dialogue_id(self, dialogue_id: int):
        """Sets the dialogue_id of this Parenthetical.

        Note: This is a Foreign Key to `dialogue.dialogue_id`.<fk table='dialogue' column='dialogue_id'/>  # noqa: E501

        :param dialogue_id: The dialogue_id of this Parenthetical.
        :type dialogue_id: int
        """

        self._dialogue_id = dialogue_id

    @property
    def original_text(self) -> str:
        """Gets the original_text of this Parenthetical.


        :return: The original_text of this Parenthetical.
        :rtype: str
        """
        return self._original_text

    @original_text.setter
    def original_text(self, original_text: str):
        """Sets the original_text of this Parenthetical.


        :param original_text: The original_text of this Parenthetical.
        :type original_text: str
        """

        self._original_text = original_text

    @property
    def modernized_text(self) -> str:
        """Gets the modernized_text of this Parenthetical.


        :return: The modernized_text of this Parenthetical.
        :rtype: str
        """
        return self._modernized_text

    @modernized_text.setter
    def modernized_text(self, modernized_text: str):
        """Sets the modernized_text of this Parenthetical.


        :param modernized_text: The modernized_text of this Parenthetical.
        :type modernized_text: str
        """

        self._modernized_text = modernized_text
