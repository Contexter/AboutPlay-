# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Centeredtext(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, centered_id: int=None, script_id: int=None, text: str=None):  # noqa: E501
        """Centeredtext - a model defined in Swagger

        :param centered_id: The centered_id of this Centeredtext.  # noqa: E501
        :type centered_id: int
        :param script_id: The script_id of this Centeredtext.  # noqa: E501
        :type script_id: int
        :param text: The text of this Centeredtext.  # noqa: E501
        :type text: str
        """
        self.swagger_types = {
            'centered_id': int,
            'script_id': int,
            'text': str
        }

        self.attribute_map = {
            'centered_id': 'centered_id',
            'script_id': 'script_id',
            'text': 'text'
        }
        self._centered_id = centered_id
        self._script_id = script_id
        self._text = text

    @classmethod
    def from_dict(cls, dikt) -> 'Centeredtext':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The centeredtext of this Centeredtext.  # noqa: E501
        :rtype: Centeredtext
        """
        return util.deserialize_model(dikt, cls)

    @property
    def centered_id(self) -> int:
        """Gets the centered_id of this Centeredtext.

        Note: This is a Primary Key.<pk/>  # noqa: E501

        :return: The centered_id of this Centeredtext.
        :rtype: int
        """
        return self._centered_id

    @centered_id.setter
    def centered_id(self, centered_id: int):
        """Sets the centered_id of this Centeredtext.

        Note: This is a Primary Key.<pk/>  # noqa: E501

        :param centered_id: The centered_id of this Centeredtext.
        :type centered_id: int
        """
        if centered_id is None:
            raise ValueError("Invalid value for `centered_id`, must not be `None`")  # noqa: E501

        self._centered_id = centered_id

    @property
    def script_id(self) -> int:
        """Gets the script_id of this Centeredtext.

        Note: This is a Foreign Key to `script.script_id`.<fk table='script' column='script_id'/>  # noqa: E501

        :return: The script_id of this Centeredtext.
        :rtype: int
        """
        return self._script_id

    @script_id.setter
    def script_id(self, script_id: int):
        """Sets the script_id of this Centeredtext.

        Note: This is a Foreign Key to `script.script_id`.<fk table='script' column='script_id'/>  # noqa: E501

        :param script_id: The script_id of this Centeredtext.
        :type script_id: int
        """

        self._script_id = script_id

    @property
    def text(self) -> str:
        """Gets the text of this Centeredtext.


        :return: The text of this Centeredtext.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this Centeredtext.


        :param text: The text of this Centeredtext.
        :type text: str
        """

        self._text = text
